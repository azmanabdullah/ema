<?php
declare(strict_types=1);

namespace EMA\Tests\App\Authentication;

use Carbon\Carbon;
use EMA\App\Http\Authentication\BadToken;
use EMA\App\Http\Authentication\JWT;
use EMA\Domain\Foundation\VO\Identity;
use EMA\Domain\Note\Model\Collection\NoteCollection;
use EMA\Tests\BaseTest;
use Slim\App;
use Slim\Http\Request;

final class AuthenticationMiddlewareTest extends BaseTest
{
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }
    
    function test_it_returns_403_when_failed_authentication()
    {
        
        $app      = container()->get(App::class);
        $path     = $app->getContainer()->get('router')->pathFor('api.notes.add');
        $response = $this->sendHttp("post", $path, ['text' => 'test'], null, $app);
        $this->assertEquals(403, $response->getStatusCode());
    }
    
    function test_it_allows_to_execute_when_authenticated()
    {
        $user_id  = new Identity();
        $app      = container()->get(App::class);
        $path     = $app->getContainer()->get('router')->pathFor('api.notes.add');
        $response = $this->sendHttp("post", $path, [
            'text' => 'test',
        ], $user_id, $app);
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertEquals(1, count(container()->get(NoteCollection::class)->all()));
    }
    
    
}