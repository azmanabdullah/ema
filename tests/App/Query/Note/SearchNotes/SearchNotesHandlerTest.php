<?php
declare(strict_types=1);

namespace EMA\Tests\App\Query\Note\SearchNotes;

use Doctrine\Common\Collections\Collection;
use EMA\App\Query\Note\SearchNotes\SearchNotes;
use EMA\Domain\Foundation\VO\Identity;
use EMA\Domain\Note\Model\Collection\NoteCollection;
use EMA\Domain\Note\Model\Note;
use EMA\Domain\Note\Model\VO\NoteText;
use EMA\Tests\BaseTest;

class SearchNotesHandlerTest extends BaseTest
{
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        
        $this->restartContainer();
    }
    
    
    function test_search_works()
    {
        $me = new Identity();
        $this->setAuthenticatedUser($me);
        
        $note_id_1 = new Identity();
        $note_id_2 = new Identity();
        
        container()->get(NoteCollection::class)->save(new Note($note_id_1,
            new NoteText("The highway to the heaven"), $me));
        container()->get(NoteCollection::class)->save(new Note($note_id_2,
            new NoteText("Whhere is the right way to the heaven?"), $me));
        
        $query = new SearchNotes($me, "highway");
        
        query_bus()->dispatch($query)
                   ->then(function (Collection $result) use ($note_id_1) {
                       $this->assertEquals(1, $result->count());
                       $this->assertEquals($note_id_1->getAsString(), $result->first()['id']);
                   })
                   ->done();
        
        
    }
    
}
