<?php
declare(strict_types=1);

namespace EMA\Tests\Domain\Note\Commands\ModifyNote;

use EMA\Domain\Foundation\VO\Identity;
use EMA\Domain\Note\Commands\ModifyNote\ModifyNote;
use EMA\Domain\Note\Commands\ModifyNote\ModifyNoteHandler;
use EMA\Domain\Note\Model\Collection\NoteCollection;
use EMA\Domain\Note\Model\Note;
use EMA\Domain\Note\Model\VO\NoteText;
use EMA\Tests\BaseTest;
use Prooph\ServiceBus\Exception\CommandDispatchException;
use Prooph\ServiceBus\Plugin\Guard\UnauthorizedException;

class ModifyNoteAuthorizerTest extends BaseTest
{
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->restartContainer();
    }
    
    
    function test_it_authorizes_access()
    {
        $this->setAuthenticatedUser(new Identity());
        
        $id       = new Identity();
        $owner_id = new Identity();
        $text     = new NoteText("");
        
        $collection = container()->get(NoteCollection::class);
        $collection->save(Note::make($id, $text, $owner_id));
        
        try {
            command_bus()->dispatch(new ModifyNote($text, $id));
        } catch (CommandDispatchException $e) {
            $this->assertEquals(UnauthorizedException::class, get_class($e->getPrevious()));
        }
        
    }
    
}
